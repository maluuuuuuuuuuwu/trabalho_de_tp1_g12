/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import classes.Cliente;
import classes.Funcionarios;
import classes.Loja;
import javax.swing.JOptionPane;

/**
 *
 * @author malu
 */
public class Cadastrar_cliente extends javax.swing.JFrame {
    private Loja loja;
    /**
     * Creates new form Cadastrar_cliente
     */
    public Cadastrar_cliente(Loja loja) {
        this.loja = loja;
        initComponents();
        configurarPlaceholders(); // Chama o método para configurar os textos de ajuda
        this.setLocationRelativeTo(null); // Centraliza a tela
    }
    
    /**
     * Configura os textos de ajuda (placeholders) para os campos de entrada.
     */
    private void configurarPlaceholders() {
        // Adiciona o "placeholder" para os campos de texto normais
        adicionarPlaceholder(cpf, "CPF");
        adicionarPlaceholder(Nome, "Nome");
        adicionarPlaceholder(endereco, "Endereço");
        adicionarPlaceholder(telefone, "(DD)XXXX-XXXX");
        
        // Configuração inicial para o campo de senha
        adicionarPlaceholderSenha(senha, "Senha (mínimo 6 caracteres)");
    }
 
    /**
     * Adiciona um comportamento de placeholder a um JTextField.
     * O texto de ajuda some quando o campo ganha foco e reaparece se o campo ficar vazio.
     */
    private void adicionarPlaceholder(javax.swing.JTextField textField, String placeholder) {
        textField.setText(placeholder);
        textField.setForeground(java.awt.Color.GRAY);

        textField.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                if (textField.getText().equals(placeholder)) {
                    textField.setText("");
                    textField.setForeground(java.awt.Color.BLACK);
                }
            }
            @Override
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (textField.getText().isEmpty()) {
                    textField.setText(placeholder);
                    textField.setForeground(java.awt.Color.GRAY);
                }
            }
        });
    }
 
    /**
     * Adiciona um comportamento de placeholder a um JPasswordField.
     * Mostra o texto de ajuda e só começa a mascarar quando o usuário digita.
     */
    private void adicionarPlaceholderSenha(javax.swing.JPasswordField passwordField, String placeholder) {
        passwordField.setEchoChar((char) 0); // Mostra o texto de ajuda
        passwordField.setText(placeholder);
        passwordField.setForeground(java.awt.Color.GRAY);
        
        passwordField.addFocusListener(new java.awt.event.FocusAdapter() {
            @Override
            public void focusGained(java.awt.event.FocusEvent evt) {
                String senhaAtual = new String(passwordField.getPassword());
                if (senhaAtual.equals(placeholder)) {
                    passwordField.setText("");
                    passwordField.setEchoChar('*'); // Começa a mascarar a senha com '*'
                    passwordField.setForeground(java.awt.Color.BLACK);
                }
            }
            @Override
            public void focusLost(java.awt.event.FocusEvent evt) {
                if (new String(passwordField.getPassword()).isEmpty()) {
                    passwordField.setEchoChar((char) 0); // Mostra o texto de ajuda novamente
                    passwordField.setText(placeholder);
                    passwordField.setForeground(java.awt.Color.GRAY);
                }
            }
        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        cpf = new javax.swing.JTextField();
        endereco = new javax.swing.JTextField();
        telefone = new javax.swing.JTextField();
        senha = new javax.swing.JPasswordField();
        cadastrar = new javax.swing.JButton();
        Nome = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 255, 204));
        jPanel1.setPreferredSize(new java.awt.Dimension(1134, 624));

        cpf.setText("CPF");
        cpf.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cpfActionPerformed(evt);
            }
        });

        endereco.setText("Endereco");

        telefone.setText("(DD)XXXX-XXXX");
        telefone.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                telefoneActionPerformed(evt);
            }
        });

        senha.setText("jPasswordField1");

        cadastrar.setText("cadastrar");
        cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cadastrarActionPerformed(evt);
            }
        });

        Nome.setText("Nome");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(141, 141, 141)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(senha)
                        .addComponent(telefone, javax.swing.GroupLayout.DEFAULT_SIZE, 253, Short.MAX_VALUE)
                        .addComponent(endereco)
                        .addComponent(cpf)
                        .addComponent(Nome)))
                .addContainerGap(114, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(113, 113, 113)
                .addComponent(cpf, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(Nome, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(endereco, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(telefone, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(senha, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(50, 50, 50)
                .addComponent(cadastrar)
                .addContainerGap(75, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 508, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 571, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cpfActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cpfActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cpfActionPerformed

    private void telefoneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_telefoneActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_telefoneActionPerformed

    private void cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cadastrarActionPerformed
        try {
            // Obtém os valores dos campos
            String cpfText = cpf.getText().trim();
            String enderecoText = endereco.getText().trim();
            String telefoneText = telefone.getText().trim();
            String nome = Nome.getText().trim();
            String senhaText = new String(senha.getPassword()).trim();

            // Validação 1: Verifica campos vazios
            if (cpfText.isEmpty() || cpfText.equals("CPF") || 
                nome.isEmpty() || nome.equals("Nome") ||
                enderecoText.isEmpty() || enderecoText.equals("Endereço") ||
                telefoneText.isEmpty() || telefoneText.equals("(DD)XXXX-XXXX") ||
                senhaText.isEmpty() || senhaText.equals("Senha (mínimo 6 caracteres)")) {

                JOptionPane.showMessageDialog(
                  this, 
                    "Todos os campos são obrigatórios!", 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE
            );
    return;
}

            // Validação 2: Telefone válido (formato básico)
            if (!telefoneText.matches("^\\(?\\d{2}\\)?[\\s-]?\\d{4,5}[\\s-]?\\d{4}$")) {
                JOptionPane.showMessageDialog(
                    this, 
                    "Telefone inválido! Use o formato (DD)XXXX-XXXX.", 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            // Validação 3: Nome não pode conter números
            if (nome.matches(".*\\d.*")) {
                JOptionPane.showMessageDialog(
                    this, 
                    "O nome não pode conter números!", 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            // Validação 4: Senha mínima de 6 caracteres
            if (senhaText.length() < 6) {
                JOptionPane.showMessageDialog(
                    this, 
                    "A senha deve ter no mínimo 6 caracteres!", 
                    "Erro", 
                    JOptionPane.ERROR_MESSAGE
                );
                return;
            }

            // Se tudo estiver válido, cria o cliente
            Cliente cliente = new Cliente(
                cpfText, 
                enderecoText, 
                telefoneText,
                nome, 
                senhaText
            );
            loja.addCliente(cliente);
            JOptionPane.showMessageDialog(this, "Cliente " + nome + " cadastrado com sucesso!");
            dispose();

        } catch (Exception e) {
            JOptionPane.showMessageDialog(
                this, 
                "Erro inesperado: " + e.getMessage(), 
                "Erro", 
                JOptionPane.ERROR_MESSAGE
            );
        }
    }//GEN-LAST:event_cadastrarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Cadastrar_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Cadastrar_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Cadastrar_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Cadastrar_cliente.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                //new cadastrar_cliente().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Nome;
    private javax.swing.JButton cadastrar;
    private javax.swing.JTextField cpf;
    private javax.swing.JTextField endereco;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPasswordField senha;
    private javax.swing.JTextField telefone;
    // End of variables declaration//GEN-END:variables
}
