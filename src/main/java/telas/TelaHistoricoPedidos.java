/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import classes.Cliente;
import classes.Loja;
import classes.Pedido;
import java.util.ArrayList;
import java.util.Comparator;
import java.util.List;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author alexb
 */
public class TelaHistoricoPedidos extends javax.swing.JFrame {

    private Loja loja;
    private Cliente cliente;
    private List<Pedido> pedidosDoCliente; // Lista para guardar os pedidos e facilitar a ordenação

    public TelaHistoricoPedidos(Loja loja, Cliente cliente) {
        this.loja = loja;
        this.cliente = cliente;
        initComponents();
        configurarTela();
        this.setLocationRelativeTo(null);
    }
    
    
    private void configurarTela() {
        // Adiciona os critérios de ordenação ao ComboBox
        cmbCriterio.setModel(new DefaultComboBoxModel<>(new String[]{
            "Data (Mais Recentes)",
            "Data (Mais Antigos)",
            "Valor (Maior para Menor)",
            "Valor (Menor para Maior)"
        }));
        
        // Carrega a lista de pedidos do cliente uma vez
        this.pedidosDoCliente = new ArrayList<>();
        for (Pedido p : loja.getLista_pedidos()) {
            if (p.getCliente().equals(this.cliente)) {
                this.pedidosDoCliente.add(p);
            }
        }
        
        // Popula a tabela com a lista inicial (ordenada por mais recente por padrão)
        btnOrdenarActionPerformed(null);
    }

     /**
     * Preenche a tabela com uma lista de pedidos já ordenada.
     * @param pedidosOrdenados A lista de pedidos para exibir.
     */
    private void popularTabela(List<Pedido> pedidosOrdenados) {
        DefaultTableModel model = (DefaultTableModel) tblHistorico.getModel();
        model.setColumnIdentifiers(new String[]{"Data", "Qtd. Itens", "Valor Pago"});
        model.setRowCount(0);

        for (Pedido pedido : pedidosOrdenados) {
            model.addRow(new Object[]{
                pedido.getDataFormatada(),
                pedido.getQuantidadeItens(),
                String.format("R$ %.2f", pedido.calculaTotal_desconto())
            });
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHistorico = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbCriterio = new javax.swing.JComboBox<>();
        btnOrdenar = new javax.swing.JButton();

        jCheckBox1.setText("jCheckBox1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Meu Historico de Pedidos");

        tblHistorico.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblHistorico.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHistoricoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHistorico);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Ordenar por "));

        jLabel2.setText("Criterio :");

        cmbCriterio.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        btnOrdenar.setText("Ordenar");
        btnOrdenar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOrdenarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(46, 46, 46)
                .addComponent(cmbCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnOrdenar)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnOrdenar)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2)
                        .addComponent(cmbCriterio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(72, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(jScrollPane1)
                        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(52, 52, 52))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tblHistoricoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHistoricoMouseClicked
    // Pega o número da linha que foi clicada na tabela
    int linhaSelecionada = tblHistorico.getSelectedRow();

    // Se nenhuma linha foi selecionada (clique fora dos dados), não faz nada
    if (linhaSelecionada == -1) {
        return;
    }

    // Precisamos encontrar o objeto Pedido que corresponde a essa linha.
    // Como a tabela só mostra os pedidos do cliente, podemos criar uma lista temporária.
    List<Pedido> pedidosDoCliente = new ArrayList<>();
    for (Pedido p : loja.getLista_pedidos()) {
        if (p.getCliente().equals(this.cliente)) {
            pedidosDoCliente.add(p);
        }
    }

    // O pedido clicado é o que está na mesma posição da lista temporária
    Pedido pedidoSelecionado = pedidosDoCliente.get(linhaSelecionada);

    // Monta a mensagem com os detalhes
    String detalhes = String.format(
        "Detalhes do Pedido\n\n" +
        "Data: %s\n" +
        "Valor Total Pago: R$ %.2f\n\n" +
        "Itens Comprados:\n%s",
        pedidoSelecionado.getDataFormatada(),
        pedidoSelecionado.calculaTotal_desconto(),
        pedidoSelecionado.getItensFormatados() // Usando o novo método que criamos!
    );

    // Exibe os detalhes em uma janela de mensagem
    JOptionPane.showMessageDialog(this, detalhes, "Detalhes do Pedido", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_tblHistoricoMouseClicked

    private void btnOrdenarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOrdenarActionPerformed
    // Pega o critério que o usuário escolheu no JComboBox
    String criterio = (String) cmbCriterio.getSelectedItem();
    
    // Se por algum motivo não houver nada selecionado, não faz nada.
    if (criterio == null) {
        return;
    }
    
    // Usa a classe Comparator do Java para reordenar a lista de pedidos
    // de acordo com a escolha do usuário.
    switch (criterio) {
        case "Data (Mais Recentes)":
            pedidosDoCliente.sort(Comparator.comparing(Pedido::getData).reversed());
            break;
        case "Data (Mais Antigos)":
            pedidosDoCliente.sort(Comparator.comparing(Pedido::getData));
            break;
        case "Valor (Maior para Menor)":
            pedidosDoCliente.sort(Comparator.comparingDouble(Pedido::calculaTotal_desconto).reversed());
            break;
        case "Valor (Menor para Maior)":
            pedidosDoCliente.sort(Comparator.comparingDouble(Pedido::calculaTotal_desconto));
            break;
    }
    
    // Depois de ordenar a lista, chama o método para redesenhar a tabela com os dados na nova ordem.
    popularTabela(pedidosDoCliente);
    }//GEN-LAST:event_btnOrdenarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaHistoricoPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaHistoricoPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaHistoricoPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaHistoricoPedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
            
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnOrdenar;
    private javax.swing.JComboBox<String> cmbCriterio;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHistorico;
    // End of variables declaration//GEN-END:variables
}
