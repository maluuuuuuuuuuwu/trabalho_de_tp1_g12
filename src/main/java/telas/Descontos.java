/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import classes.DescontoFixo;
import classes.DescontoPorcentagem;
import classes.DescontoQuantidade;
import classes.Loja;
import javax.swing.JOptionPane;

/**
 *
 * @author malu
 */
public class Descontos extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Descontos.class.getName());
    Loja loja;
    /**
     * Creates new form Descontos
     */
    public Descontos(Loja loja) {
        this.loja = loja;
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jToggleButton1 = new javax.swing.JToggleButton();
        valor = new javax.swing.JTextField();
        descricao = new javax.swing.JTextField();
        adicionar = new javax.swing.JButton();
        DescontoFixo = new javax.swing.JCheckBox();
        DescontoPorcentagem = new javax.swing.JCheckBox();
        DescontoQuantidade = new javax.swing.JCheckBox();
        Quantidade_minima = new javax.swing.JTextField();

        jToggleButton1.setText("jToggleButton1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setBackground(new java.awt.Color(0, 0, 0));

        valor.setText("valor");
        valor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                valorActionPerformed(evt);
            }
        });

        descricao.setText("descricao");
        descricao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                descricaoActionPerformed(evt);
            }
        });

        adicionar.setText("adicionar");
        adicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                adicionarActionPerformed(evt);
            }
        });

        DescontoFixo.setText("Descontof fixo");
        DescontoFixo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescontoFixoActionPerformed(evt);
            }
        });

        DescontoPorcentagem.setText("Desconto porcentagem");
        DescontoPorcentagem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescontoPorcentagemActionPerformed(evt);
            }
        });

        DescontoQuantidade.setText("Desconto quantidade");
        DescontoQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DescontoQuantidadeActionPerformed(evt);
            }
        });

        Quantidade_minima.setText("Quantidade minima");
        Quantidade_minima.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Quantidade_minimaActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(adicionar))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(DescontoFixo)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                                .addComponent(DescontoPorcentagem)
                                .addGap(44, 44, 44)
                                .addComponent(DescontoQuantidade))
                            .addComponent(valor)
                            .addComponent(descricao)
                            .addComponent(Quantidade_minima, javax.swing.GroupLayout.Alignment.LEADING))))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(DescontoQuantidade)
                    .addComponent(DescontoPorcentagem)
                    .addComponent(DescontoFixo))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(Quantidade_minima, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(descricao, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(valor, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(28, 28, 28)
                .addComponent(adicionar)
                .addGap(22, 22, 22))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void valorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_valorActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_valorActionPerformed

    private void DescontoFixoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescontoFixoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DescontoFixoActionPerformed

    private void DescontoPorcentagemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescontoPorcentagemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DescontoPorcentagemActionPerformed

    private void DescontoQuantidadeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DescontoQuantidadeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_DescontoQuantidadeActionPerformed

    private void descricaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_descricaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_descricaoActionPerformed

    private void adicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_adicionarActionPerformed
        try {
            // Validação dos campos básicos
            String desc = descricao.getText().trim();
            String valorText = valor.getText().trim();

            if (desc.isEmpty() || valorText.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Descrição e valor são obrigatórios!", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Validação do valor numérico
            double valorDouble;
            try {
                valorDouble = Double.parseDouble(valorText);
                if (valorDouble <= 0) {
                    JOptionPane.showMessageDialog(this, "O valor deve ser maior que zero!", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Valor inválido! Digite um número válido.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            // Validações específicas para cada tipo de desconto
            if (DescontoPorcentagem.isSelected()) {
                if (valorDouble > 100) {
                    JOptionPane.showMessageDialog(this, "Porcentagem não pode ser maior que 100%!", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
                double percentual = valorDouble / 100.0;
                loja.addDesconto(new DescontoPorcentagem(desc, percentual));

            } else if (DescontoFixo.isSelected()) {
                loja.addDesconto(new DescontoFixo(desc, valorDouble));

            } else if (DescontoQuantidade.isSelected()) {
                String quantidadeText = Quantidade_minima.getText().trim();
                if (quantidadeText.isEmpty()) {
                    JOptionPane.showMessageDialog(this, "Quantidade mínima é obrigatória!", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }

                try {
                    int quantidadeMinima = Integer.parseInt(quantidadeText);
                    if (quantidadeMinima <= 0) {
                        JOptionPane.showMessageDialog(this, "Quantidade mínima deve ser maior que zero!", "Erro", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    if (valorDouble > 100) {
                        JOptionPane.showMessageDialog(this, "Porcentagem não pode ser maior que 100%!", "Erro", JOptionPane.ERROR_MESSAGE);
                        return;
                    }

                    double percentual = valorDouble / 100.0;
                    loja.addDesconto(new DescontoQuantidade(desc, quantidadeMinima, percentual));

                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Quantidade inválida! Digite um número inteiro.", "Erro", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            } else {
                JOptionPane.showMessageDialog(this, "Selecione um tipo de desconto!", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }

            dispose(); // Fecha a janela após cadastro bem-sucedido

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Erro inesperado: " + e.getMessage(), "Erro", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_adicionarActionPerformed

    private void Quantidade_minimaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Quantidade_minimaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Quantidade_minimaActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            Loja loja = new Loja();
            new Descontos(loja).setVisible(true);
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox DescontoFixo;
    private javax.swing.JCheckBox DescontoPorcentagem;
    private javax.swing.JCheckBox DescontoQuantidade;
    private javax.swing.JTextField Quantidade_minima;
    private javax.swing.JButton adicionar;
    private javax.swing.JTextField descricao;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JTextField valor;
    // End of variables declaration//GEN-END:variables
}
