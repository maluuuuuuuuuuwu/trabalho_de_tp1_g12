/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package telas;

import classes.Cliente;
import classes.Item;
import classes.Loja;
import classes.Pedido;
import classes.SubPedido;
import java.awt.GridLayout; 
import java.util.ArrayList;
import java.util.LinkedHashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JComboBox;
import javax.swing.JLabel; 
import javax.swing.JOptionPane;

/**
 *
 * @author alexb
 */
public class Pedidos extends javax.swing.JFrame {
    private Loja loja;
    private Cliente cliente;
    private Map<Item, JComboBox<String>> MapeamentoDeItens;
    /**
     * Creates new form Pedidos
     */
    public Pedidos(Loja loja, Cliente cliente) {
        this.loja = loja;
        this.cliente = cliente;
        this.MapeamentoDeItens = new LinkedHashMap<>(); // Usamos LinkedHashMap para manter a ordem
        
        initComponents(); // Este método é gerado pelo NetBeans e DEVE ser a primeira chamada aqui
        gerarCardapioDinamico(); // Chamamos o método que vai "desenhar" o cardápio
        this.setLocationRelativeTo(null); // Centraliza a tela
    }

    private void gerarCardapioDinamico() {
        // Pega a lista de produtos do cardápio da loja
        List<Item> cardapio = loja.getItens_oferecidos();
        
        // Limpa o painel para o caso de haver algo nele
        painelCardapio.removeAll();
        
        // Define o layout do painel (caso não tenha sido feito no modo Design)
        // 0 linhas significa "quantas forem necessárias"
        painelCardapio.setLayout(new GridLayout(0, 4, 10, 10)); 
        
        for (Item item : cardapio) {
            // Cria os componentes para cada item
            JLabel nomeItemLabel = new JLabel(item.getNome());
            JComboBox<String> quantidadeComboBox = new JComboBox<>();
            
            // Adiciona as opções de quantidade (0 a 10)
            for (int i = 0; i <= 10; i++) {
                quantidadeComboBox.addItem(String.valueOf(i));
            }
            
            // Adiciona os componentes ao painel
            painelCardapio.add(nomeItemLabel);
            painelCardapio.add(quantidadeComboBox);
            
            // Guarda a referência do item e seu ComboBox no nosso mapa
            this.MapeamentoDeItens.put(item, quantidadeComboBox);
        }
        
        // Revalida e redesenha o painel para que as mudanças apareçam
        painelCardapio.revalidate();
        painelCardapio.repaint();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        button1 = new java.awt.Button();
        label1 = new java.awt.Label();
        EnviarPedido = new javax.swing.JButton();
        painelCardapio = new javax.swing.JPanel();

        button1.setLabel("button1");

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        label1.setText("Pedido");

        EnviarPedido.setText("Enviar Pedido");
        EnviarPedido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnviarPedidoActionPerformed(evt);
            }
        });

        painelCardapio.setLayout(new java.awt.GridLayout(1, 0));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(painelCardapio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(EnviarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 185, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(22, 22, 22))
            .addGroup(layout.createSequentialGroup()
                .addGap(239, 239, 239)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(245, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap(37, Short.MAX_VALUE)
                .addComponent(label1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(24, 24, 24)
                .addComponent(painelCardapio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(104, 104, 104)
                .addComponent(EnviarPedido, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void EnviarPedidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnviarPedidoActionPerformed
        List<SubPedido> itensSelecionados = new ArrayList<>();

        // Itera sobre o nosso mapa de itens e comboboxes
        for (Map.Entry<Item, JComboBox<String>> entry : MapeamentoDeItens.entrySet()) {
            Item item = entry.getKey();
            JComboBox<String> comboBox = entry.getValue();

            int quantidade = comboBox.getSelectedIndex();

            if (quantidade > 0) {
                if (!item.verificaEstoque(quantidade)) {
                    JOptionPane.showMessageDialog(this, "Estoque insuficiente para: " + item.getNome(), "Erro de Estoque", JOptionPane.ERROR_MESSAGE);
                    return; 
                }
                item.remove_estoque(quantidade);
                itensSelecionados.add(new SubPedido(item, quantidade));
            }
        }
        
        if (itensSelecionados.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Nenhum item foi selecionado!", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        Pedido pedido = new Pedido(itensSelecionados, loja.getDescontos(), loja, cliente);
        loja.addPedido(pedido);

        double frete = loja.calcularFrete(cliente.getEndereco());
        double totalSemDesconto = pedido.calculaTotal();
        double totalFinal = pedido.calculaTotal_desconto();

        String resumo = String.format(
            "Pedido realizado com sucesso!\n\nItens Pedidos:\n%s\nFrete: R$ %.2f\nTotal Bruto: R$ %.2f\nTotal com Desconto: R$ %.2f",
            formatarItens(pedido.getItens()),
            frete,
            totalSemDesconto,
            totalFinal
        );
        JOptionPane.showMessageDialog(this, resumo, "Pedido Confirmado", JOptionPane.INFORMATION_MESSAGE);
        dispose();
    }

    private String formatarItens(List<SubPedido> itens) {
        StringBuilder sb = new StringBuilder();
        for (SubPedido sp : itens) {
            sb.append(String.format("- %d x %s (R$ %.2f)\n", sp.getQuantidade(), sp.getItem().getNome(), sp.getItem().getPreco()));
        }
        return sb.toString();     
    }//GEN-LAST:event_EnviarPedidoActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pedidos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EnviarPedido;
    private java.awt.Button button1;
    private java.awt.Label label1;
    private javax.swing.JPanel painelCardapio;
    // End of variables declaration//GEN-END:variables
}
